{"id":"node_modules/react-html-parser/lib/processNodes.js","dependencies":[{"name":"C:\\Users\\HPr\\SubPartition\\Programming Folder\\Frameworks\\JavaScript\\React\\igtool\\instagram-tool\\package.json","includedInParent":true,"mtime":1634913829909},{"name":"C:\\Users\\HPr\\SubPartition\\Programming Folder\\Frameworks\\JavaScript\\React\\igtool\\instagram-tool\\node_modules\\react-html-parser\\package.json","includedInParent":true,"mtime":1615650026469},{"name":"./utils/isEmptyTextNode","loc":{"line":8,"column":31},"parent":"C:\\Users\\HPr\\SubPartition\\Programming Folder\\Frameworks\\JavaScript\\React\\igtool\\instagram-tool\\node_modules\\react-html-parser\\lib\\processNodes.js","resolved":"C:\\Users\\HPr\\SubPartition\\Programming Folder\\Frameworks\\JavaScript\\React\\igtool\\instagram-tool\\node_modules\\react-html-parser\\lib\\utils\\isEmptyTextNode.js"},{"name":"./convertNodeToElement","loc":{"line":12,"column":36},"parent":"C:\\Users\\HPr\\SubPartition\\Programming Folder\\Frameworks\\JavaScript\\React\\igtool\\instagram-tool\\node_modules\\react-html-parser\\lib\\processNodes.js","resolved":"C:\\Users\\HPr\\SubPartition\\Programming Folder\\Frameworks\\JavaScript\\React\\igtool\\instagram-tool\\node_modules\\react-html-parser\\lib\\convertNodeToElement.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = processNodes;\n\nvar _isEmptyTextNode = require('./utils/isEmptyTextNode');\n\nvar _isEmptyTextNode2 = _interopRequireDefault(_isEmptyTextNode);\n\nvar _convertNodeToElement = require('./convertNodeToElement');\n\nvar _convertNodeToElement2 = _interopRequireDefault(_convertNodeToElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Processes the nodes generated by htmlparser2 and convert them all into React elements\n *\n * @param {Object[]} nodes List of nodes to process\n * @param {Function} transform Transform function to optionally apply to nodes\n * @returns {React.Element[]} The list of processed React elements\n */\nfunction processNodes(nodes, transform) {\n\n  return nodes.filter(function (node) {\n    return !(0, _isEmptyTextNode2.default)(node);\n  }).map(function (node, index) {\n\n    // return the result of the transform function if applicable\n    var transformed = void 0;\n    if (typeof transform === 'function') {\n      transformed = transform(node, index);\n      if (transformed === null || !!transformed) {\n        return transformed;\n      }\n    }\n\n    // otherwise convert the node as standard\n    return (0, _convertNodeToElement2.default)(node, index, transform);\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/react-html-parser/lib/processNodes.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"node_modules/react-html-parser/lib/processNodes.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = processNodes;\n\nvar _isEmptyTextNode = require('./utils/isEmptyTextNode');\n\nvar _isEmptyTextNode2 = _interopRequireDefault(_isEmptyTextNode);\n\nvar _convertNodeToElement = require('./convertNodeToElement');\n\nvar _convertNodeToElement2 = _interopRequireDefault(_convertNodeToElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Processes the nodes generated by htmlparser2 and convert them all into React elements\n *\n * @param {Object[]} nodes List of nodes to process\n * @param {Function} transform Transform function to optionally apply to nodes\n * @returns {React.Element[]} The list of processed React elements\n */\nfunction processNodes(nodes, transform) {\n\n  return nodes.filter(function (node) {\n    return !(0, _isEmptyTextNode2.default)(node);\n  }).map(function (node, index) {\n\n    // return the result of the transform function if applicable\n    var transformed = void 0;\n    if (typeof transform === 'function') {\n      transformed = transform(node, index);\n      if (transformed === null || !!transformed) {\n        return transformed;\n      }\n    }\n\n    // otherwise convert the node as standard\n    return (0, _convertNodeToElement2.default)(node, index, transform);\n  });\n}"},"lineCount":43}},"error":null,"hash":"e4b97ab968539ac2b0e81d65140b342d","cacheData":{"env":{}}}